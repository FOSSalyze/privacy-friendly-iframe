variables:
  cypress_browser_image: &cypress_browser_image 'cypress/included:cypress-13.6.6-node-20.11.0-chrome-121.0.6167.184-1-ff-123.0-edge-121.0.2277.128-1'
  alpine: &alpine 'alpine:3.19.1'
  start_server: &start_server
    - npm run dev-server &

when:
  event: [push, pull_request, tag]

steps:
  - name: install
    image: *cypress_browser_image
    commands:
      - npm install

  - name: build
    image: *cypress_browser_image
    commands:
      - npm run build
      - npm run prepare-dev

  - name: test_chrome
    image: *cypress_browser_image
    commands:
      - <<: *start_server
      - npx cypress run --browser chrome
    when:
      - status: [ success, failure ]

  - name: test_firefox
    image: *cypress_browser_image
    commands:
      - <<: *start_server
      - npx cypress run --browser firefox
    when:
      - status: [ success, failure ]

  - name: test_edge
    image: *cypress_browser_image
    commands:
      - <<: *start_server
      - npx cypress run --browser edge
    when:
      - status: [ success, failure ]

  - name: archiving
    image: *alpine
    commands:
      - apk add tar zip
      - mkdir -p dist/archives
      - find dist/prod -type f -printf "%P\n" | tar -czf "dist/archives/pf-iframe-${CI_COMMIT_TAG##v}-prod.tar.gz" -C dist/prod -T -
      - find dist/lib -type f -printf "%P\n" | tar -czf "dist/archives/pf-iframe-${CI_COMMIT_TAG##v}-lib.tar.gz" -C dist/lib -T -
      - find dist/prod -type f -exec sh -c "zip dist/archives/pf-iframe-${CI_COMMIT_TAG##v}-prod.zip -j {}" \;
      - find dist/lib -type f -exec sh -c "zip dist/archives/pf-iframe-${CI_COMMIT_TAG##v}-lib.zip -j {}" \;
    when:
      event: tag

  - name: create_release
    image: plugins/github-release
    settings:
      files:
        - dist/archives/*.tar.gz
        - dist/archives/*.zip
      title: ${CI_COMMIT_TAG##v}
      api-key:
        from_secret: FOSSalyze_RELEASE_GITHUB_TOKEN
    when:
      event: tag